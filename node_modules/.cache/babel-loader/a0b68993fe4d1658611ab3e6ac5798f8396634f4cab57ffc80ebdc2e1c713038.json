{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ijanv\\\\hangman-app\\\\src\\\\GameBoard.js\";\n// Imports React\nimport React from 'react';\n\n// Defines the GameBoard component, which receives 'word' and 'guessedLetters' as props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  word,\n  guessedLetters\n}) => {\n  // Function that renders the word, showing guessed letters and underscores for unguessed ones\n  const renderWord = () => {\n    return word.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"letter\",\n      children: guessedLetters.includes(letter.toLowerCase()) ? letter : '_'\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word\",\n      children: renderWord()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n// Exports the GameBoard component\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","word","guessedLetters","renderWord","split","map","letter","index","className","children","includes","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ijanv/hangman-app/src/GameBoard.js"],"sourcesContent":["// Imports React\r\nimport React from 'react';\r\n\r\n// Defines the GameBoard component, which receives 'word' and 'guessedLetters' as props\r\nconst GameBoard = ({ word, guessedLetters }) => {\r\n  // Function that renders the word, showing guessed letters and underscores for unguessed ones\r\n  const renderWord = () => {\r\n    return word.split('').map((letter, index) => (\r\n      <span key={index} className=\"letter\">\r\n        {/* Checks if the letter has been guessed, displays the letter if guessed or an underscore if not */}\r\n        {guessedLetters.includes(letter.toLowerCase()) ? letter : '_'}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-board\">\r\n      {/* Displays the word with guessed letters revealed */}\r\n      <div className=\"word\">{renderWord()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Exports the GameBoard component\r\nexport default GameBoard;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,KAAK;EAC9C;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOF,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtCR,OAAA;MAAkBS,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAEjCP,cAAc,CAACQ,QAAQ,CAACJ,MAAM,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGL,MAAM,GAAG;IAAG,GAFpDC,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACP,CAAC;EACJ,CAAC;EAED,oBACEhB,OAAA;IAAKS,SAAS,EAAC,YAAY;IAAAC,QAAA,eAEzBV,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEN,UAAU,CAAC;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAnBMhB,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}