{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nconst HangmanImage = ({\n  incorrectGuesses\n}) => {\n  _s();\n  // Adjust incorrect guesses to start from state1.GIF\n  const adjustedState = Math.min(incorrectGuesses + 1, 11); // Ensure it doesn't exceed max states\n  const imagePath = `/hangmandrawings/state${adjustedState}.GIF`;\n\n  // Pass the image path to the document body for background\n  React.useEffect(() => {\n    document.body.style.backgroundImage = `url(${imagePath})`;\n    document.body.style.backgroundSize = 'cover'; // Cover the entire page\n    document.body.style.backgroundPosition = 'center'; // Center the image\n    document.body.style.backgroundRepeat = 'no-repeat'; // Prevent repetition\n  }, [incorrectGuesses]); // Re-run this effect whenever incorrectGuesses change\n\n  return null; // No need to render anything since it's all handled by CSS\n};\n_s(HangmanImage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = HangmanImage;\nexport default HangmanImage;\nvar _c;\n$RefreshReg$(_c, \"HangmanImage\");","map":{"version":3,"names":["React","HangmanImage","incorrectGuesses","_s","adjustedState","Math","min","imagePath","useEffect","document","body","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","_c","$RefreshReg$"],"sources":["C:/Users/ijanv/hangman-app/src/HangmanImage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst HangmanImage = ({ incorrectGuesses }) => {\r\n  // Adjust incorrect guesses to start from state1.GIF\r\n  const adjustedState = Math.min(incorrectGuesses + 1, 11); // Ensure it doesn't exceed max states\r\n  const imagePath = `/hangmandrawings/state${adjustedState}.GIF`;\r\n\r\n  // Pass the image path to the document body for background\r\n  React.useEffect(() => {\r\n    document.body.style.backgroundImage = `url(${imagePath})`;\r\n    document.body.style.backgroundSize = 'cover';  // Cover the entire page\r\n    document.body.style.backgroundPosition = 'center'; // Center the image\r\n    document.body.style.backgroundRepeat = 'no-repeat'; // Prevent repetition\r\n  }, [incorrectGuesses]); // Re-run this effect whenever incorrectGuesses change\r\n\r\n  return null; // No need to render anything since it's all handled by CSS\r\n};\r\n\r\nexport default HangmanImage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACJ,gBAAgB,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAMK,SAAS,GAAG,yBAAyBH,aAAa,MAAM;;EAE9D;EACAJ,KAAK,CAACQ,SAAS,CAAC,MAAM;IACpBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAOL,SAAS,GAAG;IACzDE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,cAAc,GAAG,OAAO,CAAC,CAAE;IAC/CJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,kBAAkB,GAAG,QAAQ,CAAC,CAAC;IACnDL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACI,gBAAgB,GAAG,WAAW,CAAC,CAAC;EACtD,CAAC,EAAE,CAACb,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAExB,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACC,EAAA,CAdIF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}