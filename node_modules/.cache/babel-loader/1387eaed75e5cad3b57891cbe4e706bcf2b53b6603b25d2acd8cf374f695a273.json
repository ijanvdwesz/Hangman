{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ijanv\\\\hangman-app\\\\src\\\\Keyboard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Keyboard = ({\n  guessedLetters,\n  onGuess\n}) => {\n  const letters = 'QWERTYUIOPASDFGHJKLZXCVBNM'.split('');\n\n  // Define rows based on a QWERTY layout\n  const rows = ['QWERTYUIOP', 'ASDFGHJKL', 'ZXCVBNM'];\n  const handleKeyClick = letter => {\n    if (!guessedLetters.includes(letter)) {\n      onGuess(letter);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: [rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-row\",\n      children: row.split('').map(letter => {\n        const isGuessed = guessedLetters.includes(letter);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `key ${isGuessed ? 'disabled' : ''}`,\n          onClick: () => handleKeyClick(letter)\n          // Removed 'disabled' property here to ensure the disabled class is properly applied\n          ,\n          children: letter\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-row row-special\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"key spacebar\",\n        onClick: () => handleKeyClick(' '),\n        disabled: guessedLetters.includes(' '),\n        children: \"Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Keyboard","guessedLetters","onGuess","letters","split","rows","handleKeyClick","letter","includes","className","children","map","row","rowIndex","isGuessed","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ijanv/hangman-app/src/Keyboard.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Keyboard = ({ guessedLetters, onGuess }) => {\r\n  const letters = 'QWERTYUIOPASDFGHJKLZXCVBNM'.split('');\r\n\r\n  // Define rows based on a QWERTY layout\r\n  const rows = [\r\n    'QWERTYUIOP',\r\n    'ASDFGHJKL',\r\n    'ZXCVBNM',\r\n  ];\r\n\r\n  const handleKeyClick = (letter) => {\r\n    if (!guessedLetters.includes(letter)) {\r\n      onGuess(letter);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {rows.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"keyboard-row\">\r\n          {row.split('').map((letter) => {\r\n            const isGuessed = guessedLetters.includes(letter);\r\n            return (\r\n              <button\r\n                key={letter}\r\n                className={`key ${isGuessed ? 'disabled' : ''}`}\r\n                onClick={() => handleKeyClick(letter)}\r\n                // Removed 'disabled' property here to ensure the disabled class is properly applied\r\n              >\r\n                {letter}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n      <div className=\"keyboard-row row-special\">\r\n        <button\r\n          className=\"key spacebar\"\r\n          onClick={() => handleKeyClick(' ')}\r\n          disabled={guessedLetters.includes(' ')}\r\n        >\r\n          Space\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EAChD,MAAMC,OAAO,GAAG,4BAA4B,CAACC,KAAK,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMC,IAAI,GAAG,CACX,YAAY,EACZ,WAAW,EACX,SAAS,CACV;EAED,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACD,MAAM,CAAC,EAAE;MACpCL,OAAO,CAACK,MAAM,CAAC;IACjB;EACF,CAAC;EAED,oBACER,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtBL,IAAI,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBd,OAAA;MAAoBU,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzCE,GAAG,CAACR,KAAK,CAAC,EAAE,CAAC,CAACO,GAAG,CAAEJ,MAAM,IAAK;QAC7B,MAAMO,SAAS,GAAGb,cAAc,CAACO,QAAQ,CAACD,MAAM,CAAC;QACjD,oBACER,OAAA;UAEEU,SAAS,EAAE,OAAOK,SAAS,GAAG,UAAU,GAAG,EAAE,EAAG;UAChDC,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAACC,MAAM;UACpC;UAAA;UAAAG,QAAA,EAECH;QAAM,GALFA,MAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CAAC;MAEb,CAAC;IAAC,GAbMN,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN,CAAC,eACFpB,OAAA;MAAKU,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvCX,OAAA;QACEU,SAAS,EAAC,cAAc;QACxBM,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAAC,GAAG,CAAE;QACnCc,QAAQ,EAAEnB,cAAc,CAACO,QAAQ,CAAC,GAAG,CAAE;QAAAE,QAAA,EACxC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GA9CIrB,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}