{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ijanv\\\\hangman-app\\\\src\\\\Keyboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Keyboard = ({\n  guessedLetters,\n  onGuess,\n  restartGame\n}) => {\n  _s();\n  const letters = 'QWERTYUIOPASDFGHJKLZXCVBNM'.split('');\n  const handleKeyClick = letter => {\n    const normalizedLetter = letter.toLowerCase(); // Normalize the letter to lowercase\n    if (!guessedLetters.includes(normalizedLetter)) {\n      onGuess(normalizedLetter); // Pass the normalized letter to the onGuess function\n    }\n  };\n  const handleKeyPress = event => {\n    const key = event.key.toLowerCase(); // Normalize key to lowercase\n    if (letters.map(letter => letter.toLowerCase()).includes(key)) {\n      handleKeyClick(key); // Handle key press as if it were a button click\n    }\n  };\n\n  // Add event listener for keyboard input\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress); // Cleanup on unmount\n    };\n  }, [guessedLetters]); // Re-run when guessedLetters changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: [letters.map(letter => {\n      const normalizedLetter = letter.toLowerCase(); // Normalize letter to lowercase for comparison\n      const isGuessed = guessedLetters.includes(normalizedLetter);\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `key ${isGuessed ? 'disabled' : ''}`,\n        onClick: () => handleKeyClick(letter),\n        disabled: isGuessed // Disable the key if it's already guessed\n        ,\n        children: letter\n      }, normalizedLetter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-row row-special\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"key key-reset\",\n        onClick: restartGame // Trigger the restartGame function\n        ,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Keyboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Keyboard","guessedLetters","onGuess","restartGame","_s","letters","split","handleKeyClick","letter","normalizedLetter","toLowerCase","includes","handleKeyPress","event","key","map","window","addEventListener","removeEventListener","className","children","isGuessed","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ijanv/hangman-app/src/Keyboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst Keyboard = ({ guessedLetters, onGuess, restartGame }) => {\r\n  const letters = 'QWERTYUIOPASDFGHJKLZXCVBNM'.split('');\r\n\r\n  const handleKeyClick = (letter) => {\r\n    const normalizedLetter = letter.toLowerCase(); // Normalize the letter to lowercase\r\n    if (!guessedLetters.includes(normalizedLetter)) {\r\n      onGuess(normalizedLetter); // Pass the normalized letter to the onGuess function\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    const key = event.key.toLowerCase(); // Normalize key to lowercase\r\n    if (letters.map((letter) => letter.toLowerCase()).includes(key)) {\r\n      handleKeyClick(key); // Handle key press as if it were a button click\r\n    }\r\n  };\r\n\r\n  // Add event listener for keyboard input\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyPress); // Cleanup on unmount\r\n    };\r\n  }, [guessedLetters]); // Re-run when guessedLetters changes\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {letters.map((letter) => {\r\n        const normalizedLetter = letter.toLowerCase(); // Normalize letter to lowercase for comparison\r\n        const isGuessed = guessedLetters.includes(normalizedLetter);\r\n        return (\r\n          <button\r\n            key={normalizedLetter}\r\n            className={`key ${isGuessed ? 'disabled' : ''}`}\r\n            onClick={() => handleKeyClick(letter)}\r\n            disabled={isGuessed} // Disable the key if it's already guessed\r\n          >\r\n            {letter}\r\n          </button>\r\n        );\r\n      })}\r\n      <div className=\"keyboard-row row-special\">\r\n        <button\r\n          className=\"key key-reset\"\r\n          onClick={restartGame} // Trigger the restartGame function\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,cAAc;EAAEC,OAAO;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,OAAO,GAAG,4BAA4B,CAACC,KAAK,CAAC,EAAE,CAAC;EAEtD,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAI,CAACT,cAAc,CAACU,QAAQ,CAACF,gBAAgB,CAAC,EAAE;MAC9CP,OAAO,CAACO,gBAAgB,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,GAAG,GAAGD,KAAK,CAACC,GAAG,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC;IACrC,IAAIL,OAAO,CAACU,GAAG,CAAEP,MAAM,IAAKA,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACG,GAAG,CAAC,EAAE;MAC/DP,cAAc,CAACO,GAAG,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACdmB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,cAAc,CAAC;IAClD,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,cAAc,CAAC,CAAC,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAACX,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEF,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtBf,OAAO,CAACU,GAAG,CAAEP,MAAM,IAAK;MACvB,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;MAC/C,MAAMW,SAAS,GAAGpB,cAAc,CAACU,QAAQ,CAACF,gBAAgB,CAAC;MAC3D,oBACEV,OAAA;QAEEoB,SAAS,EAAE,OAAOE,SAAS,GAAG,UAAU,GAAG,EAAE,EAAG;QAChDC,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAACC,MAAM,CAAE;QACtCe,QAAQ,EAAEF,SAAU,CAAC;QAAA;QAAAD,QAAA,EAEpBZ;MAAM,GALFC,gBAAgB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CAAC;IAEb,CAAC,CAAC,eACF5B,OAAA;MAAKoB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvCrB,OAAA;QACEoB,SAAS,EAAC,eAAe;QACzBG,OAAO,EAAEnB,WAAY,CAAC;QAAA;QAAAiB,QAAA,EACvB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnDIJ,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}