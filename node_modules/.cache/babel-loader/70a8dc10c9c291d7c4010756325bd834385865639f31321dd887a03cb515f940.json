{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ijanv\\\\hangman-app\\\\src\\\\HangmanImage.js\";\n//Imports React\nimport React from 'react';\n//HangmanImage component with incorrectGuesses prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HangmanImage = ({\n  incorrectGuesses\n}) => {\n  //Sets incorrect guesses to start from state1.GIF and ensures it doesn't exceed the max number of states (11)\n  const adjustedState = Math.min(incorrectGuesses + 1, 11); // Uses Math.min to prevent exceeding 11 stages (max lives)\n\n  // Constructs the image path based on the current incorrect guesses\n  const imagePath = `/hangmandrawings/state${adjustedState}.GIF`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hangman-image\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath,\n      alt: `Hangman stage ${adjustedState}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n//Exports the HangmanImage component\n_c = HangmanImage;\nexport default HangmanImage;\n//Images are from HyperionDrives Hangman folder\nvar _c;\n$RefreshReg$(_c, \"HangmanImage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HangmanImage","incorrectGuesses","adjustedState","Math","min","imagePath","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ijanv/hangman-app/src/HangmanImage.js"],"sourcesContent":["//Imports React\r\nimport React from 'react';\r\n//HangmanImage component with incorrectGuesses prop\r\nconst HangmanImage = ({ incorrectGuesses }) => {\r\n  //Sets incorrect guesses to start from state1.GIF and ensures it doesn't exceed the max number of states (11)\r\n  const adjustedState = Math.min(incorrectGuesses + 1, 11); // Uses Math.min to prevent exceeding 11 stages (max lives)\r\n  \r\n  // Constructs the image path based on the current incorrect guesses\r\n  const imagePath = `/hangmandrawings/state${adjustedState}.GIF`;\r\n\r\n  return (\r\n    <div className=\"hangman-image\">\r\n      {/* Renders the Hangman image corresponding to the current game state */}\r\n      <img src={imagePath} alt={`Hangman stage ${adjustedState}`} />\r\n    </div>\r\n  );\r\n};\r\n//Exports the HangmanImage component\r\nexport default HangmanImage;\r\n//Images are from HyperionDrives Hangman folder"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAC7C;EACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACH,gBAAgB,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMI,SAAS,GAAG,yBAAyBH,aAAa,MAAM;EAE9D,oBACEH,OAAA;IAAKO,SAAS,EAAC,eAAe;IAAAC,QAAA,eAE5BR,OAAA;MAAKS,GAAG,EAAEH,SAAU;MAACI,GAAG,EAAE,iBAAiBP,aAAa;IAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AACD;AAAAC,EAAA,GAdMd,YAAY;AAelB,eAAeA,YAAY;AAC3B;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}